{
    "title": "Guia Completo de Java: Aprenda a Linguagem de Programação Java",
    "author": "DevMedia",
    "body": "Guia Completo de Java: Aprenda a Linguagem de Programa\u00e7\u00e3o Java\n\nDevMedia - Plataforma para Programadores\n\nTecnologias\n\nFundamentos\n* Algoritmo\n* Orienta\u00e7\u00e3o a Objetos\n\nLinguagens\n* C#\n* Delphi\n* Dart\n* Java\n* JavaScript\n* Kotlin\n* PHP\n* Python\n* TypeScript\n\nBack-end\n* Django\n* Laravel\n* Node.js\n* Spring\n* .Net\n\nFront-end\n* Angular\n* CSS\n* HTML\n* React\n\nBanco de dados\n* Modelagem de dados\n* MySQL\n* Oracle\n* PostgreSQL\n* SQL\n* SQL Server\n\nArquitetura e Design\n* MVC\n* Rest\n* Padr\u00f5es de projeto\n\nMobile\n* Flutter\n* React Native\n\nCI/CD\n* Docker\n* Git\n* Teste de software\n\nEngenharia de Software\n* Levantamento de requisitos\n* Scrum\n* UML\n\nMapaNovos Conte\u00fadosNovos Exerc\u00edcios\n\nExercite Contrate um programador\n\nNavegueCursosArtigosV\u00eddeosGuiasProjetosRevistasF\u00f3rumRanking\n\nteste gr\u00e1tis\n\nEmpresarial\n\nQuer ter acesso a todos os cursos desse Guia?\n\nGuia Completo de Java\n\nNeste Guia de Refer\u00eancia voc\u00ea encontrar\u00e1 todo o conte\u00fado que precisa para come\u00e7ar a programar com a linguagem Java, a sua caixa de ferramentas base para criar aplica\u00e7\u00f5es com Java.\n\n217\n\nGuias Java Guia Completo de Java\n\n217\n\nA plataforma Java\n\nVoc\u00ea j\u00e1 deve ter ouvido falar que Java \u00e9 tanto uma linguagem quanto uma plataforma. Isso quer dizer que, al\u00e9m da linguagem, o programador Java tamb\u00e9m conta com um conjunto de APIs que facilitam o desenvolvimento ao oferecerem solu\u00e7\u00f5es para situa\u00e7\u00f5es comuns de desenvolvimento.\n\nConfira como a plataforma Java foi organizada para atender as necessidades de diferentes tipos de aplica\u00e7\u00f5es:\n\n* Java SE: Representa a base do Java, sendo composta pelas APIs e bibliotecas b\u00e1sicas para possibilitar o desenvolvimento de aplicativos de linha de comando e desktop. J\u00e1 ouviu falar em Swing? Sim, ele faz parte do Java SE (Java Standard Edition);\n* Java ME: A Java Micro Edition \u00e9 a plataforma voltada para dispositivos m\u00f3veis e embarcados, com capacidade de processamento reduzida, como os utilizados na cria\u00e7\u00e3o de produtos para a Internet das Coisas;\n* Java EE: Voltada para o desenvolvimento de solu\u00e7\u00f5es web e corporativas, a Java Enterprise Edition \u00e9 uma especifica\u00e7\u00e3o que agrupa outras, sendo, por isso, conhecida como especifica\u00e7\u00e3o \u0093guarda-chuva\u0094.\n\nAprenda mais sobre a plataforma Java:\n\n*\n\nArtigo\n\nIntrodu\u00e7\u00e3o \u00e0s plataformas Java\n\n*\n\nDevCast\n\nFique por dentro do Java em 10 minutos\n\nM\u00e1quina Virtual Java\n\nNa m\u00e1quina virtual Java, ou JVM, \u00e9 onde a sua aplica\u00e7\u00e3o ser\u00e1 executada. \u00c9 ela, tamb\u00e9m, a respons\u00e1vel pela caracter\u00edstica multiplataforma do Java. Um programa escrito nessa linguagem ser\u00e1 executado em qualquer plataforma, seja ela um notebook, smartphone ou torradeira, que possua uma m\u00e1quina virtual Java implementada.\n\nUm dos recursos mais conhecidos da JVM \u00e9 o Garbage Collection. \u00c9 ele que \u00e9 acionado com certa frequ\u00eancia para limpar da mem\u00f3ria objetos que n\u00e3o est\u00e3o sendo utilizados, evitando desperd\u00edcio de espa\u00e7o e que sua aplica\u00e7\u00e3o deixe de funcionar por falta dela. Para se aprofundar neste assunto preparamos os seguintes artigos:\n\n*\n\nArtigo\n\nIntrodu\u00e7\u00e3o ao Java Garbage Collection\n\n*\n\nArtigo\n\nGarbage Collection: Entendendo e otimizando - Parte 1\n\n*\n\nArtigo\n\nGarbage Collection: Entendendo e otimizando - Parte 2\n\nAlgumas vezes, a depender da proposta de sua aplica\u00e7\u00e3o, pode ser necess\u00e1rio fazer customiza\u00e7\u00f5es na JVM visando melhoria na performance. Para aprender sobre isso, acesse:\n\n*\n\nArtigo\n\nM\u00e1quina Virtual Java: Gerenciando Mem\u00f3ria e Recursos\n\n*\n\nArtigo\n\nConfigurando o espa\u00e7o de mem\u00f3ria das \u00e1reas Heap e Perm da JVM\n\nPrimeiros passos no Java\n\nAssim como em qualquer outra linguagem, no Java voc\u00ea encontrar\u00e1 t\u00f3picos de conhecimento fundamental. Domin\u00e1-los permite programar um c\u00f3digo mais limpo e f\u00e1cil de ser compreendido, como veremos nos v\u00eddeos a seguir:\n\n*\n\nMeetUp\n\nJava: Linguagem e Plataforma\n\n*\n\nMeetUp\n\nJava: Linguagem e Plataforma - perguntas e respostas\n\n*\n\nCurso\n\nO que \u00e9 Java?\n\n*\n\nMeetUp\n\nConhecendo o jeito Java de programar\n\n*\n\nMeetUp\n\nConhecendo o jeito Java de programar: perguntas e respostas\n\nDiferente de outras linguagens, no Java o seu primeiro c\u00f3digo ser\u00e1 escrito dentro de um m\u00e9todo de uma classe. Pensando nisso, nada melhor que come\u00e7ar pela cria\u00e7\u00e3o da sua primeira classe Java. Saiba mais nesses conte\u00fados:\n\n*\n\nCurso\n\nLinguagem Java: tipos de dados Novo!\n\n*\n\nDocumenta\u00e7\u00e3o\n\nJava: Declara\u00e7\u00e3o e utiliza\u00e7\u00e3o de classes\n\n*\n\nCurso\n\nLinguagem Java: Hello Word! Novo!\n\nAp\u00f3s aprender sobre classes voc\u00ea deve estar curioso para saber como declarar vari\u00e1veis e realizar opera\u00e7\u00f5es com elas. Acompanhe esses pr\u00f3ximos passos nos posts:\n\n*\n\nCurso\n\nLinguagem Java: vari\u00e1veis e constantes Novo!\n\n*\n\nDocumenta\u00e7\u00e3o\n\nJava: vari\u00e1veis e constantes\n\n*\n\nCurso\n\nOperadores da linguagem Java Novo!\n\n*\n\nArtigo\n\nOperadores l\u00f3gicos e matem\u00e1ticos da linguagem Java\n\n*\n\nDocumenta\u00e7\u00e3o\n\nJava: operadores de atribui\u00e7\u00e3o, aritm\u00e9ticos, relacionais e l\u00f3gicos\n\nNo Java as enums s\u00e3o um poderoso recurso para a cria\u00e7\u00e3o de objetos imut\u00e1veis. Saiba mais sobre elas nos posts:\n\n*\n\n5 minutos\n\nEnums no Java\n\n*\n\nArtigo\n\nTipos Enum no Java\n\nVoc\u00ea j\u00e1 ouviu falar que tudo no Java s\u00e3o objetos? Se ainda n\u00e3o, n\u00e3o tem problema. Os artigos a seguir te deixar\u00e3o por dentro desse assunto:\n\n*\n\nArtigo\n\nJava Object Class: Entendendo a classe Object\n\n*\n\nArtigo\n\nClasses Wrapper: Explorando as classes que empacotam os tipos primitivos\n\nAgora que voc\u00ea j\u00e1 conheceu os componentes b\u00e1sicos de um programa Java, que tal olhar um pouco mais de perto a cria\u00e7\u00e3o de uma classe? Para vermos na pr\u00e1tica como funciona a cria\u00e7\u00e3o precisamos, primeiro, montar o nosso ambiente, como mostra os conte\u00fados a seguir:\n\n*\n\nCurso\n\nPreparando o ambiente para programar em Java\n\n*\n\n5 minutos\n\nJava: Como instalar uma biblioteca no Intellij IDEA\n\nCom o ambiente pronto, confira neste 5 minutos como criar sua primeira classe:\n\n5 minutos\n\nComo criar minha primeira classe em Java\n\nStrings\n\nA manipula\u00e7\u00e3o de texto \u00e9 algo bastante comum no desenvolvimento de aplica\u00e7\u00f5es. Em Java, a estrutura principal para isso \u00e9 a classe String, que nos fornece v\u00e1rios m\u00e9todos para sua manipula\u00e7\u00e3o. Nos posts abaixo voc\u00ea encontrar\u00e1 conte\u00fados que abordam desde os m\u00e9todos b\u00e1sicos, at\u00e9 outras op\u00e7\u00f5es para que possa manipular texto da maneira mais adequada para sua solu\u00e7\u00e3o.\n\n*\n\nArtigo\n\nString: Trabalhando com texto em Java\n\n*\n\nArtigo\n\nEntendendo e trabalhando com Strings em Java\n\n*\n\nArtigo\n\nJava String: Manipulando m\u00e9todos da classe String\n\nAl\u00e9m da classe String, temos tamb\u00e9m as classes StringBuilder e StringBuffer. Para aprender sobre elas e as diferen\u00e7as em rela\u00e7\u00e3o \u00e0 String, acesse:\n\n*\n\nArtigo\n\nA Classe StringBuilder em Java\n\n*\n\nArtigo\n\nDiferen\u00e7as entre String, StringBuilder e StringBuffer em Java\n\nAlgumas vezes precisamos de uma ferramenta mais espec\u00edfica para processar Strings. \u00c9 nesse momento que as express\u00f5es regulares podem ajudar. Saiba mais neste artigo:\n\n*\n\nArtigo\n\nExpress\u00f5es Regulares em Java\n\nEstruturas de condi\u00e7\u00e3o e repeti\u00e7\u00e3o no Java\n\nDuas ferramentas importantes e presentes na l\u00f3gica de programa\u00e7\u00e3o de qualquer c\u00f3digo s\u00e3o as estruturas de condi\u00e7\u00e3o e repeti\u00e7\u00e3o. A estrutura de condi\u00e7\u00e3o nos permite criar um bloco de c\u00f3digo a ser executado apenas se determinada condi\u00e7\u00e3o for atendida. J\u00e1 a estrutura de repeti\u00e7\u00e3o nos permite criar um bloco de c\u00f3digo que pode ser executado v\u00e1rias vezes, enquanto a condi\u00e7\u00e3o especificada for verdadeira.\n\nAprenda sobre essas estruturas nos posts abaixo:\n\n*\n\nDocumenta\u00e7\u00e3o\n\nJava: if/else e o operador tern\u00e1rio\n\n*\n\nArtigo\n\nEstruturas condicionais em Java\n\n*\n\nArtigo\n\nRevisando Estruturas de Repeti\u00e7\u00e3o em Java\n\nEntrada e sa\u00edda de dados\n\nSaber apresentar dados na tela e ler dados do teclado \u00e9 um passo fundamental no aprendizado da programa\u00e7\u00e3o. Lembre-se que o principal objetivo de um programa \u00e9 processar os dados do usu\u00e1rio e exibir os resultados. Para isso temos os recursos de Entrada/Sa\u00edda, ou In/Out da linguagem. Aprenda sobre eles nos posts abaixo:\n\n*\n\nArtigo\n\nDestrinchando a classe java.lang.System\n\n*\n\nArtigo\n\nJava: Como ler e apresentar dados com os comandos de entrada e sa\u00edda\n\n*\n\nArtigo\n\nClasse InputStream e Outputstream em Java\n\nM\u00f3dulos do c\u00f3digo Java\n\nSaber como organizar o c\u00f3digo \u00e9 fundamental para sua manuten\u00e7\u00e3o e reutiliza\u00e7\u00e3o. Em Java, o c\u00f3digo \u00e9 organizado em pacotes, classes e m\u00e9todos. Dominados esses conceitos, e utilizando modificadores de acesso, podemos controlar como cada classe ou m\u00e9todo poder\u00e1 ser reaproveitado pelos demais. Para aprender sobre isso, acesse o conte\u00fado abaixo:\n\n*\n\nArtigo\n\nEntendendo a estrutura de um c\u00f3digo Java\n\n*\n\nArtigo\n\nCompreendendo o uso de pacotes, ou packages - Revista Easy Java Magazine 28\n\n*\n\nDocumenta\u00e7\u00e3o\n\nJava: Declara\u00e7\u00e3o e utiliza\u00e7\u00e3o de classes\n\n*\n\nArtigo\n\nConstrutores em Java\n\n*\n\nArtigo\n\nM\u00e9todos: m\u00f3dulos de programa em Java\n\n*\n\nArtigo\n\nModificadores de Acesso em Java\n\n*\n\nArtigo\n\nClasses abstratas e interfaces em Java\n\n*\n\nArtigo\n\nEst\u00e1ticos != Inst\u00e2ncia - revista easy Java Magazine 9\n\n*\n\nArtigo\n\nClasses An\u00f4nimas e Aninhadas em Java\n\n*\n\nArtigo\n\nIntrodu\u00e7\u00e3o aos Default Methods do Java 8\n\nEstrutura de Dados\n\nAo come\u00e7ar a desenvolver sistemas um pouco mais avan\u00e7ados, voc\u00ea se deparar\u00e1 com a necessidade de organizar os dados que s\u00e3o manipulados no c\u00f3digo. Para isso, \u00e9 comum o uso de estruturas de dados, que, como o nome indica, fornecem uma forma padr\u00e3o para agrupar e simplificar a ger\u00eancia de dados com caracter\u00edsticas em comum. Os links abaixo trazem um conte\u00fado que possibilitar\u00e1 um detalhamento sobre esse tema:\n\n*\n\nArtigo\n\nVetores - Revista easy Java Magazine 16 - Parte 1\n\n*\n\nArtigo\n\nMatrizes - Aprenda a trabalhar com vetores bidimensionais - Revista easy Java Magazine 22\n\n*\n\nArtigo\n\nEstrutura de dados: Primeiros passos com m\u00e9todos de busca\n\n*\n\nArtigo\n\nProgramando com estruturas de dados e padr\u00f5es de projeto\n\n*\n\nArtigo\n\nEstruturas de dados com classes gen\u00e9ricas\n\nTratamento de exce\u00e7\u00f5es\n\n\u00c9 comum a ocorr\u00eancia de exce\u00e7\u00f5es durante a execu\u00e7\u00e3o de um programa. O que n\u00e3o \u00e9 comum \u00e9 n\u00e3o nos prepararmos para elas. Uma exce\u00e7\u00e3o \u00e9 um evento diferente daquilo que normalmente o software espera que aconte\u00e7a. Quando n\u00e3o tratamos exce\u00e7\u00f5es, o software fica sem saber o que fazer com ela e como continuar sua execu\u00e7\u00e3o, o que normalmente leva \u00e0 paralisa\u00e7\u00e3o do sistema. Para aprender a tratar exce\u00e7\u00f5es, acesse:\n\n*\n\nArtigo\n\nComo tratar exce\u00e7\u00f5es na linguagem Java\n\n*\n\nArtigo\n\nAprenda a trabalhar com exce\u00e7\u00f5es no Java\n\n*\n\nArtigo\n\nExce\u00e7\u00f5es em Java\n\n*\n\nArtigo\n\nTratando exce\u00e7\u00f5es em Java\n\n*\n\nArtigo\n\nRecursos do Java 7 para o tratamento de exce\u00e7\u00f5es\n\n*\n\nArtigo\n\nChecked Exceptions versus Unchecked Exceptions: Trabalhando com exce\u00e7\u00f5es\n\nTodo programa pode e vai falhar em algum momento. Aplica\u00e7\u00f5es consistentes se preparam adequadamente para esse momento. Aprenda no curso abaixo como isso \u00e9 poss\u00edvel com tratamento de exce\u00e7\u00f5es:\n\nCurso\n\nJava Exceptions: Trabalhando com exce\u00e7\u00f5es em Java\n\nSerializa\u00e7\u00e3o e fluxo de dados\n\nLogo voc\u00ea poder\u00e1 se perguntar: Como salvar os dados que utilizo em minha aplica\u00e7\u00e3o para que consiga utiliz\u00e1-los posteriormente? A resposta \u00e9 simples: Serializa\u00e7\u00e3o. Quando serializamos um objeto, estamos o transformando em um array de bytes, formato utilizado para salvar arquivos.\n\nOs conte\u00fados abaixo o ensinar\u00e3o a fazer isso:\n\n*\n\nV\u00eddeo\n\nComo serializar/desserializar objetos em Java\n\n*\n\nArtigo\n\nSerializa\u00e7\u00e3o de Objetos em Java\n\n*\n\nArtigo\n\nJava: Arquivos e fluxos de dados\n\n*\n\nV\u00eddeo\n\nManipulando arquivos em Stream com Java 8\n\nAgora, se voc\u00ea deseja aprender como salvar os dados em um banco de dados, consulte o Guia de Carreira Programador Java e veja outros conte\u00fados sobre a linguagem.\n\nSockets\n\nCaso seu interesse seja aprender como enviar e receber dados e arquivos pela rede, saber programar com Sockets \u00e9 fundamental. Compreender sockets \u00e9 a primeira etapa para iniciar na programa\u00e7\u00e3o distribu\u00edda. Para dominar esse assunto, acesse:\n\n*\n\nArtigo\n\nPrograma\u00e7\u00e3o de Sockets em Java\n\n*\n\nArtigo\n\nJava Socket: Entendendo a classe Socket e a ServerSocket em detalhes\n\n*\n\nArtigo\n\nJava Socket: Transfer\u00eancia de Arquivos pela Rede\n\n*\n\nArtigo\n\nComo criar um Chat Multithread com Socket em Java\n\n*\n\nArtigo\n\nPrograma\u00e7\u00e3o distribu\u00edda com Sockets\n\nThreads\n\nCom a multiplica\u00e7\u00e3o do n\u00famero de n\u00facleos presentes em um processador, saber como programar com threads \u00e9 algo de grande relev\u00e2ncia para fornecer sistemas com alto desempenho, que explorem ao m\u00e1ximo o poder computacional de servidores e desktops. Aprenda sobre esse assunto com os links abaixo:\n\n*\n\nArtigo\n\nComo programar com Threads em Java\n\n*\n\nArtigo\n\nSimplificando o uso de Threads\n\n*\n\nArtigo\n\nThreads: paralelizando tarefas com os diferentes recursos do Java\n\n*\n\nArtigo\n\nPrograma\u00e7\u00e3o paralela em Java\n\n*\n\nArtigo\n\nJava 8: Conhe\u00e7a os recursos para a programa\u00e7\u00e3o concorrente\n\n*\n\nArtigo\n\nProcessamento paralelo em suas aplica\u00e7\u00f5es\n\n*\n\nDevCast\n\nInstru\u00e7\u00e3o FOR paralela em Java\n\nCollections\n\nNeste momento \u00e9 bem prov\u00e1vel que voc\u00ea j\u00e1 tenha tido o primeiro contato com as cole\u00e7\u00f5es, afinal, uma cole\u00e7\u00e3o \u00e9 uma estrutura de dados. Mas, por que s\u00f3 agora falar delas? \u00c9 importante compreender os fundamentos por tr\u00e1s de um conceito antes de come\u00e7ar a utilizar algo mais avan\u00e7ado, com um n\u00edvel mais alto de abstra\u00e7\u00e3o.\n\nDe forma simples, uma cole\u00e7\u00e3o \u00e9 uma lista de objetos. Como quando lidamos com dados \u00e9 comum nos depararmos com diferentes necessidades de organiza\u00e7\u00e3o dos mesmos, o Java facilita esse trabalho nos fornecendo diferentes op\u00e7\u00f5es para mant\u00ea-los - de listas que se preocupam apenas em armazenar os dados em mem\u00f3ria, a listas que evitam dados repetidos e os mant\u00e9m ordenados.\n\nNos links abaixo voc\u00ea aprender\u00e1 como e quando adotar cada uma:\n\n*\n\nArtigo\n\nConhe\u00e7a a API Java Collections\n\n*\n\nArtigo\n\nJava Collections: Como utilizar Collections\n\n*\n\nArtigo\n\nProgramando com o Java Collections Framework\n\n*\n\nArtigo\n\nDominando o Java Collections Framework e Generics\n\n*\n\nArtigo\n\nJava Collections: Set, List e Iterator\n\n*\n\nArtigo\n\nDiferen\u00e7as entre TreeSet, HashSet e LinkedHashSet em Java\n\n*\n\nArtigo\n\nConhecendo a interface Map do Java\n\nGenerics\n\nGenerics \u00e9 uma importante funcionalidade da linguagem Java que foi criada para facilitar o reuso do c\u00f3digo e tornar a implementa\u00e7\u00e3o mais segura e menos propensa a erros. Generics s\u00e3o bastante utilizados quando lidamos com cole\u00e7\u00f5es, por exemplo, e sua declara\u00e7\u00e3o \u00e9 feita com os caracteres \u0091<>\u0092. Assim, quando declaramos uma lista, podemos especificar que essa lista somente poder\u00e1 receber objetos de um tipo.\n\nCom isso, caso o programador tente inserir um objeto de tipo diferente, o erro ser\u00e1 identificado em tempo de compila\u00e7\u00e3o, e n\u00e3o mais em tempo de execu\u00e7\u00e3o. Para aprender sobre Generics, acesse:\n\n*\n\nArtigo\n\nJava Generics: Um guia completo sobre como utilizar\n\n*\n\nArtigo\n\nUsando Generics em Java\n\n*\n\nArtigo\n\nJava Generics: Trabalhando com M\u00e9todos\n\n*\n\nArtigo\n\nJava Generics: Reutilizando seu c\u00f3digo\n\nExpress\u00f5es Lambda\n\nUm dos recursos mais jovens da linguagem Java agrega um toque de programa\u00e7\u00e3o funcional a ela. Uma defini\u00e7\u00e3o simples e um pouco abstrata \u00e9 entender que uma express\u00e3o lambda \u00e9 uma op\u00e7\u00e3o para programar uma fun\u00e7\u00e3o sem que para isso seja necess\u00e1rio declarar um nome e um tipo de retorno. Em geral, a express\u00e3o lambda \u00e9 declarada no mesmo lugar em que ser\u00e1 utilizada e possibilita um c\u00f3digo menor e mais simples de manter.\n\nA sintaxe de uma express\u00e3o lambda \u00e9 bastante simples. Come\u00e7amos declarando os par\u00e2metros. Em seguida utilizamos o operador arrow. Por fim, declaramos o bloco de c\u00f3digo a ser executado.\n\n(Zero ou mais par\u00e2metros) -> { /* bloco de c\u00f3digo */ }\n\nPara se aprofundar nesse assunto, acesse:\n\n*\n\nCurso\n\nO que s\u00e3o Lambda Expressions?\n\n*\n\nDevCast\n\nTrabalhando com Express\u00f5es Lambdas no Java 8\n\n*\n\nArtigo\n\nProgramando com Java Lambda Expressions\n\n*\n\nArtigo\n\nComo aproveitar o m\u00e1ximo das Express\u00f5es Lambda em Java\n\nStreams\n\nCom o intuito de aprimorar a forma como manipulamos cole\u00e7\u00f5es de dados, o Java 8 trouxe a Streams API, conjunto de classes e interfaces que faz uso de conceitos da programa\u00e7\u00e3o funcional e das express\u00f5es lambda para que escrevamos c\u00f3digo mais claro e em menor quantidade.\n\nPara isso, obtemos uma stream, a partir de uma cole\u00e7\u00e3o, por exemplo, e, sem nos preocuparmos com a forma como os dados ser\u00e3o percorridos, programamos algum tipo de processamento sobre os dados, como filtros, mapeamentos, entre outros, j\u00e1 fornecidos pela API.\n\nComo exemplo, considere que temos uma lista de produtos e desejamos selecionar apenas aqueles cujo valor seja maior do que 5. O c\u00f3digo para solucionar esse problema poderia ser:\n\nList<produto> produtosFiltrados = produtos\n\n.stream()\n\n.filter((p) -> p.getValor() > 5)\n\n.collect(Collectors.toList());\n\n*\n\nArtigo\n\nJava Streams API: manipulando cole\u00e7\u00f5es de forma eficiente\n\n*\n\nArtigo\n\nStreams API: trabalhando com cole\u00e7\u00f5es de forma flex\u00edvel em Java\n\n*\n\n5 minutos\n\nJava Streams API - Trabalhando com cole\u00e7\u00f5es\n\nReflection\n\nO Java tamb\u00e9m disp\u00f5e de um recurso conhecido como Reflection. Com ele, em tempo de execu\u00e7\u00e3o conseguimos acessar informa\u00e7\u00f5es de uma classe, como os atributos e m\u00e9todos, assim como instanciar essa classe e invocar um m\u00e9todo. Isso nos permite estender funcionalidades de uma aplica\u00e7\u00e3o, por exemplo.\n\nMas antes de prosseguir, sem querer dar spoiler, voc\u00ea vai precisar de um pouco de familiaridade com as anota\u00e7\u00f5es em Java para entender esse poderoso conceito na pr\u00e1tica. Saiba mais no artigo:\n\n*\n\nArtigo\n\nEntendendo Anota\u00e7\u00f5es em Java\n\nReflection tamb\u00e9m \u00e9 muito utilizado por IDEs, bibliotecas e frameworks, os quais precisam lidar com classes criadas por terceiros. Voc\u00ea j\u00e1 imaginou como aquela biblioteca que faz o parsing de objetos para JSON e vice-versa funciona? Como ela consegue converter qualquer objeto para JSON e o JSON para seu respectivo objeto? Via Reflection! :)\n\nPara aprender sobre ele e saber como aplicar esse avan\u00e7ado recurso em alguns dos seus projetos acesse:\n\n*\n\nCurso\n\nJava Reflection API\n\n*\n\nArtigo\n\nReflection API: Reflex\u00e3o em Java\n\n*\n\nArtigo\n\nJava Reflection: Programando com Reflex\u00e3o\n\nOrienta\u00e7\u00e3o a objetos\n\nA Orienta\u00e7\u00e3o a Objetos \u00e9 o paradigma de programa\u00e7\u00e3o mais utilizado para o desenvolvimento de sistemas e tem como principal caracter\u00edstica o planejamento e implementa\u00e7\u00e3o do software a partir da representa\u00e7\u00e3o de \u0091coisas\u0092 da vida real por meio de objetos.\n\nAntes desse paradigma era comum criarmos sistemas utilizando o paradigma de programa\u00e7\u00e3o estruturada. Por\u00e9m, devido a limita\u00e7\u00f5es, aos poucos essa op\u00e7\u00e3o come\u00e7ou a ser substitu\u00edda.\n\nConhe\u00e7a algumas das vantagens da Orienta\u00e7\u00e3o a Objetos nesse DevCast:\n\n*\n\nDevCast\n\nPor que adotamos Orienta\u00e7\u00e3o a Objetos?\n\nPara compreender as diferen\u00e7as entre a Programa\u00e7\u00e3o Orientada a Objetos e a Estruturada, acesse:\n\n*\n\nArtigo\n\nPrograma\u00e7\u00e3o Orientada a Objetos x Programa\u00e7\u00e3o Estruturada\n\n*\n\nArtigo\n\nParadigmas de Programa\u00e7\u00e3o: Estruturado e Orientado a Objetos\n\nEm Java, por uma \"coincid\u00eancia planejada\" :), tudo s\u00e3o objetos, o que refor\u00e7a ainda mais a rela\u00e7\u00e3o entre a linguagem e esse paradigma. Portanto, se voc\u00ea pretende se tornar um bom programador Java, aprender Orienta\u00e7\u00e3o a Objetos (OO) \u00e9 fundamental. E agora, o que fa\u00e7o? N\u00e3o se preocupe, os conte\u00fados abaixo ensinar\u00e3o tudo o que voc\u00ea precisa para isso:\n\n*\n\nCurso\n\nB\u00e1sico de Java e Orienta\u00e7\u00e3o a Objetos\n\n*\n\nArtigo\n\nOrienta\u00e7\u00e3o a Objetos em Java: uma abordagem completa\n\n*\n\nArtigo\n\nAprendendo POO e Java\n\nPilares da Orienta\u00e7\u00e3o a Objetos\n\nAo planejar a programa\u00e7\u00e3o baseada em objetos, esse paradigma trouxe consigo uma s\u00e9rie de conceitos, os quais levam a um c\u00f3digo mais f\u00e1cil de entender, manter e reutilizar. Esses conceitos s\u00e3o a abstra\u00e7\u00e3o, encapsulamento, heran\u00e7a e polimorfismo, introduzidos no link abaixo:\n\n*\n\nDevCast\n\nOs pilares da Programa\u00e7\u00e3o Orientada a Objetos\n\nSaiba mais sobre esses conceitos nos artigos:\n\n*\n\nArtigo\n\nOs 4 pilares da Programa\u00e7\u00e3o Orientada a Objetos\n\n*\n\nArtigo\n\nAbstra\u00e7\u00e3o, Encapsulamento e Heran\u00e7a: Pilares da POO em Java\n\nO encapsulamento \u00e9 o pilar da Orienta\u00e7\u00e3o a Objetos que nos permite ocultar informa\u00e7\u00f5es e, ao mesmo tempo, atribuir seguran\u00e7a ao c\u00f3digo. Quando encapsulamos o acesso a uma vari\u00e1vel, por exemplo, n\u00e3o importa para o objeto que consome essa informa\u00e7\u00e3o (o cliente), se o valor \u00e9 obtido lendo o dado em mem\u00f3ria ou se foi necess\u00e1rio acessar um banco de dados.\n\nImagine que voc\u00ea esteja em um restaurante e fa\u00e7a um pedido. \u00c9 importante para voc\u00ea saber qual panela est\u00e1 sendo utilizada, a ordem de preparo dos nutrientes, entre outras coisas? Ent\u00e3o, encapsular \u00e9 a \"arte\" de deixar acess\u00edvel ao cliente apenas aquilo que ele precisa saber. Para aprender mais sobre isso, acesse:\n\n*\n\nArtigo\n\nEncapsulamento em Java: Primeiros passos\n\n*\n\nArtigo\n\nEntendendo o Encapsulamento em Java\n\nE a heran\u00e7a? Como assim programar uma heran\u00e7a? Voc\u00ea herdou caracter\u00edsticas de seus pais, av\u00f3s e de outras gera\u00e7\u00f5es passadas, n\u00e3o \u00e9 mesmo? Na Orienta\u00e7\u00e3o a Objetos, quando precisamos fazer com que a classe B possua caracter\u00edsticas de outra, definimos via c\u00f3digo que a classe B herda dessa outra. Interessante, n\u00e3o? :) Ainda est\u00e1 achando um pouco confuso? Acesse o post:\n\n*\n\nArtigo\n\nEntendendo e Aplicando Heran\u00e7a em Java\n\nO polimorfismo \u00e9 um pilar da Orienta\u00e7\u00e3o a Objetos que tem forte liga\u00e7\u00e3o com a heran\u00e7a. Algumas vezes, quando herdamos uma caracter\u00edstica, precisamos adicionar a ela um comportamento diferente. Por exemplo: todo animal sabe correr, por\u00e9m, cada um corre de uma maneira diferente. Para aprender como utilizar polimorfismo em Java, acesse:\n\n*\n\nV\u00eddeo\n\nPolimorfismo em Java\n\n*\n\nArtigo\n\nJava Orientado a Objetos: Polimorfismo em a\u00e7\u00e3o\n\n*\n\nArtigo\n\nSobrecarga e sobreposi\u00e7\u00e3o de m\u00e9todos em Orienta\u00e7\u00e3o a Objetos\n\nAo aplicar corretamente esses conceitos voc\u00ea ter\u00e1 como resultado um c\u00f3digo eficiente, de f\u00e1cil manuten\u00e7\u00e3o e reuso. Saiba que um c\u00f3digo de qualidade n\u00e3o envelhece e voc\u00ea poder\u00e1 reutiliz\u00e1-lo em v\u00e1rios projetos. O post abaixo retrata esse assunto:\n\n*\n\nArtigo\n\nPOO: reusabilidade e efici\u00eancia em seu c\u00f3digo\n\nCoes\u00e3o e acoplamento\n\nVoc\u00ea j\u00e1 deve ter ouvido falar que um bom c\u00f3digo precisa ter alta coes\u00e3o e baixo acoplamento. No entanto, o que \u00e9 a coes\u00e3o e o acoplamento? A coes\u00e3o \u00e9 uma medida que indica qu\u00e3o bem delimitado est\u00e1 cada m\u00f3dulo do nosso c\u00f3digo. Caso ele fa\u00e7a mais coisas do que deveria, dizemos que temos um m\u00f3dulo com baixa coes\u00e3o. J\u00e1 o acoplamento mede o grau de depend\u00eancia de um m\u00f3dulo em rela\u00e7\u00e3o aos demais. Caso ele dependa de muitos m\u00f3dulos, dizemos que ele est\u00e1 com acoplamento alto. Essas situa\u00e7\u00f5es devem ser evitadas, pois tornam o c\u00f3digo muito mais dif\u00edcil de manter e evoluir.\n\nPara aprender mais detalhadamente sobre esse assunto, acesse:\n\n*\n\nArtigo\n\nOrienta\u00e7\u00e3o a Objetos: princ\u00edpios de OO para arquiteturas robustas\n\nPrinc\u00edpios SOLID\n\nAp\u00f3s compreender os pilares da Orienta\u00e7\u00e3o a Objetos na teoria e na pr\u00e1tica, um importante passo na busca pelo c\u00f3digo de qualidade \u00e9 aprender sobre os princ\u00edpios SOLID.\n\nEsses princ\u00edpios nos ajudam a pensar no problema a ser modelado de forma orientada a objetos, propondo defini\u00e7\u00f5es que nos levam a um design de c\u00f3digo coeso e com baixo acoplamento, o que o torna f\u00e1cil de ler, manter e reutilizar.\n\nE por que esse nome, por que SOLID? Esse termo \u00e9 um acr\u00f4nimo para as cinco \"regras\" que o comp\u00f5em:\n\n* S - Single Responsibility Principle - O Princ\u00edpio da Responsabilidade \u00danica define que cada classe deve ter apenas uma responsabilidade;\n* O - Open Closed Principle - O Princ\u00edpio do Aberto Fechado define que uma classe deve ser extens\u00edvel (aberta para extens\u00f5es) por outras classes, sem que para isso precise ser modificada (fechada para modifica\u00e7\u00f5es);\n* L - Liskov Substitution Principle - O Princ\u00edpio da Substitui\u00e7\u00e3o de Liskov est\u00e1 relacionado ao uso da heran\u00e7a e dita que devemos ser capazes substituir a classe filha pela classe pai sem que o funcionamento do software seja prejudicado;\n* I - Interface Segregation Principle - O Princ\u00edpio da Segrega\u00e7\u00e3o de Interfaces preza pela correta defini\u00e7\u00e3o de interfaces, de forma que os clientes que a consumam tenham acesso apenas \u00e0quilo que de fato \u00e9 necess\u00e1rio;\n* D - Dependency Inversion Principle - O Princ\u00edpio da Invers\u00e3o de Depend\u00eancias sinaliza que devemos depender apenas de classes abstratas, e n\u00e3o de classes concretas;\n\nPara se aprofundar de fato nesse assunto, acesse os posts abaixo:\n\n*\n\nDevCast\n\nSOLID: Melhorando a Qualidade dos seus Projetos Orientados a Objetos\n\n*\n\nArtigo\n\nUtiliza\u00e7\u00e3o dos princ\u00edpios SOLID na aplica\u00e7\u00e3o de Padr\u00f5es de Projeto\n\n*\n\nArtigo\n\nDesenvolvendo software s\u00f3lido com Java\n\n*\n\nArtigo\n\nQualidade no c\u00f3digo Java com os princ\u00edpios S.O.L.I.D.\n\n*\n\nArtigo\n\nArquitetura - O Princ\u00edpio da responsabilidade \u00fanica\n\nOrienta\u00e7\u00e3o a Objetos na pr\u00e1tica\n\nAgora que voc\u00ea j\u00e1 conhece os pilares da Orienta\u00e7\u00e3o a Objetos, que tal p\u00f4r as m\u00e3os na massa? Pode dizer! J\u00e1 estava na hora, n\u00e3o \u00e9 mesmo? :)\n\nPara isso reunimos uma sele\u00e7\u00e3o de artigos que abordam esse tema na pr\u00e1tica. Confira abaixo:\n\n*\n\nArtigo\n\nPrograma\u00e7\u00e3o orientada a objetos com Java\n\n*\n\nArtigo\n\nOrienta\u00e7\u00e3o a Objetos: Da teoria \u00e0 pr\u00e1tica com a linguagem UML\n\nComo apoio a esse conte\u00fado, n\u00e3o deixe de verificar os posts abaixo e aprenda como solucionar e/ou evitar os erros mais cometidos quanto adotamos o paradigma OO.\n\n*\n\nArtigo\n\nOrienta\u00e7\u00e3o a Objetos: Conhe\u00e7a os erros mais comuns e como evit\u00e1-los\n\n*\n\nArtigo\n\nProblemas e solu\u00e7\u00f5es em Orienta\u00e7\u00e3o a Objetos\n\nBoas pr\u00e1ticas\n\nAt\u00e9 o momento voc\u00ea aprendeu as principais tecnologias que comp\u00f5em o Java, bem como utiliz\u00e1-las de forma consistente. Que tal agora colocar em pr\u00e1tica esses conhecimentos enquanto aprende t\u00e9cnicas avan\u00e7adas no desenvolvimento com Java? Saiba como no curso:\n\n*\n\nCurso\n\nCurso de Java: T\u00e9cnicas Avan\u00e7adas para Java SE\n\nLembre-se que o aprendizado da linguagem Java precisa ser constante. Somente programando voc\u00ea conseguir\u00e1 implementar c\u00f3digos melhores. Os links abaixo te ajudar\u00e3o a enriquecer esse conhecimento e agregar valor e qualidade \u00e0s suas solu\u00e7\u00f5es:\n\n*\n\nArtigo\n\nProgramando com boas pr\u00e1ticas\n\n*\n\nArtigo\n\nDicas de qualidade para o c\u00f3digo Java\n\n*\n\nArtigo\n\nBoas pr\u00e1ticas de Programa\u00e7\u00e3o\n\n*\n\nArtigo\n\nCodificando com selo de qualidade\n\n*\n\nArtigo\n\nComo desenvolver um c\u00f3digo fonte de qualidade em Java\n\n*\n\nMicroexemplo\n\nN\u00fameros m\u00e1gicos: O que s\u00e3o e como corrigir\n\n*\n\nArtigo\n\nComo adotar a an\u00e1lise est\u00e1tica de c\u00f3digo\n\nAo prosseguir com a busca pelo c\u00f3digo de qualidade, em algum momento voc\u00ea se deparar\u00e1 com o termo Clean Code. Mas, o que \u00e9 isso? O Clean Code, ou C\u00f3digo Limpo, re\u00fane uma s\u00e9rie de pr\u00e1ticas a serem aplicadas para obter um c\u00f3digo f\u00e1cil de compreender e evoluir.\n\n*\n\nArtigo\n\nC\u00f3digo limpo com Clean Code\n\n*\n\nArtigo\n\nQualidade no c\u00f3digo Java com boas pr\u00e1ticas e Clean Code\n\nA qualidade do c\u00f3digo tamb\u00e9m influencia na performance. Para conhecer algumas op\u00e7\u00f5es que te ajudar\u00e3o a aprimorar o desempenho de suas aplica\u00e7\u00f5es, acesse:\n\n*\n\nArtigo\n\nJava Performance: Aprimorando o desempenho de aplica\u00e7\u00f5es\n\nMais sobre Java\n\nAl\u00e9m dos cursos e exemplos sugeridos nesse guia, a DevMedia publica com frequ\u00eancia novos conte\u00fados sobre Java, os quais voc\u00ea pode conferir nos Guias de Consulta abaixo:\n\n*\n\nS\u00e9rie\n\nPrimeiros passos com Java S\u00e9rie\n\n*\n\nGuia de Carreira\n\nProgramador Java Guia\n\n*\n\nGuia de consulta\n\nHibernate Guia\n\n*\n\nGuia de consulta\n\nJSF - JavaServer Faces Guia\n\n*\n\nGuia de consulta\n\nSpring Framework Guia\n\n*\n\nGuia de consulta\n\nJava Enterprise Edition - Java EE Guia\n\n*\n\nGuia de consulta\n\nREST e Java Guia\n\n*\n\nGuia de consulta\n\nPadr\u00f5es de Projeto em Java Guia\n\n*\n\nGuia de consulta\n\nTestes e DevOps Guia\n\n*\n\nGuia de consulta\n\nBigData com Java Guia\n\nAl\u00e9m disso, voc\u00ea pode conferir todo o conte\u00fado de Java clicando aqui.\n\n* A plataforma Java\n* M\u00e1quina Virtual Java\n* Primeiros passos no Java\n* Strings\n* Estruturas de condi\u00e7\u00e3o e repeti\u00e7\u00e3o no Java\n* Entrada e sa\u00edda de dados\n* M\u00f3dulos do c\u00f3digo Java\n* Estrutura de Dados\n* Tratamento de exce\u00e7\u00f5es\n* Serializa\u00e7\u00e3o e fluxo de dados\n* Sockets\n* Threads\n* Collections\n* Generics\n* Express\u00f5es Lambda\n* Streams\n* Reflection\n* Orienta\u00e7\u00e3o a objetos\n* Pilares da Orienta\u00e7\u00e3o a Objetos\n* Coes\u00e3o e acoplamento\n* Princ\u00edpios SOLID\n* Orienta\u00e7\u00e3o a Objetos na pr\u00e1tica\n* Boas pr\u00e1ticas\n* Mais sobre Java\n\nSuporte ao aluno - Deixe a sua d\u00favida.\n\nFA\u00c7A PARTE DESSE TIME\n\nFa\u00e7a parte dessa comunidade 100% focada em programa\u00e7\u00e3o e tenha acesso ilimitado. Nosso compromisso \u00e9 tornar a sua experi\u00eancia de estudo cada vez mais din\u00e1mica e eficiente. Portanto, se voc\u00ea quer programar de verdade seu lugar \u00e9 aqui. Junte-se a mais de...\n\n+ 800 Mil\n\nprogramadores\n\nJ\u00e1 conhece nosso Plano Empresarial?\n\nConhe\u00e7a agora!\n\nTeste Gr\u00e1tis\n\n* Guias de Tecnologia\n* Cursos\n* Exerc\u00edcios\n* Projetos completos\n* DevCasts\n* Artigos\n* Suporte em tempo real\n\nSaiba mais\n\n* Coment\u00e1rios\n*\n\n* Favoritar\n* 217 Gostei\n\nMenu\n\nTecnologias\n\nExercicios\n\nCursos\n\nArtigos\n\nRevistas\n\nFale conosco\n\nTrabalhe conosco\n\nAssinatura para empresas\n\nTecnologias\n\nFundamentos\n\n.NET\n\nPHP\n\nPython\n\nJava\n\nDelphi\n\nHTML e CSS\n\nJavaScript\n\nNode\n\nReact Native\n\nFlutter\n\nBanco de Dados\n\nMobile\n\nSpring\n\nArquitetura\n\nAutoma\u00e7\u00e3o\n\nEngenharia\n\n+ Assuntos\n\nHospedagem web por Porta 80 Web Hosting\n\nUtilizamos cookies para fornecer uma melhor experi\u00eancia para nossos usu\u00e1rios. Para saber mais sobre o uso de cookies,\nconsulte nossa pol\u00edtica de privacidade. Ao continuar navegando em nosso site, voc\u00ea concorda com a nossa pol\u00edtica.\n\nAceitar",
    "type": "article",
    "url": "https://www.devmedia.com.br/guia/linguagem-java/38169"
}