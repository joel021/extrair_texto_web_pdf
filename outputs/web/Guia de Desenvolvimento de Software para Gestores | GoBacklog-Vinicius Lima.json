{
    "title": "Guia de Desenvolvimento de Software para Gestores | GoBacklog",
    "author": "Vinicius Lima",
    "body": "Guia de Desenvolvimento de Software para Gestores | GoBacklog\n\nSkip to content\n\nSiga-nos nas redes sociais\n\n*\n*\n*\n*\n*\n\n* Home\n* Quem somos\n* O que fazemos\n* Reports\n* Atacarejo: Crescimento e Inova\u00e7\u00f5es no setor\n* Atacado e Distribui\u00e7\u00e3o: Cen\u00e1rio Atual e Perspectiva Futura\n* Como a Araujo est\u00e1 inovando no Varejo Farmac\u00eautico\n* Energia Solar: Dados Atuais e Panorama Futuro\n* Varejo Supermercadista: Perspectiva sobre o Crescimento no Brasil\n\n* Cases\n* Chu\u00e1 Distribuidora\n* Elton Esteves\n* Levante\n\n* Blog\n* PWA: O que s\u00e3o Progressive Web Apps e por que usar?\n* 23 Podcasts sobre Inova\u00e7\u00e3o e Tecnologia para acompanhar\n* Transi\u00e7\u00e3o de Mentalidade: Como ir do Anal\u00f3gico para o Digital\n\n* Falar com um consultor\n*\n\nMENU\n\nGuia de Desenvolvimento de Software para Gestores\n\n* Home>\n* Blog>\n* Tecnologia>\n* Guia de Desenvolvimento de Software para Gestores\n\n* Post author:Vinicius Lima\n* Post published:11 de dezembro de 2019\n* Post category:Tecnologia\n* Post comments:0 Coment\u00e1rios\n\n* O Desenvolvimento de Software \u00e9 um desafio para muitos gestores, e sua m\u00e1 administra\u00e7\u00e3o pode colocar as empresas em risco de exist\u00eancia.\n* Existem tr\u00eas tipos de linguagens de programa\u00e7\u00e3o, a de M\u00e1quina, de Montagem e a de Alto N\u00edvel, a mais popular entre os programadores.\n* A Metodologia \u00c1gil \u00e9 usada pelas equipes para minimiza\u00e7\u00e3o de riscos, pois ela facilita a adi\u00e7\u00e3o de novos incrementos na solu\u00e7\u00e3o de forma interativa.\n* DevOps \u00e9 uma metodologia que faz com que a distribui\u00e7\u00e3o de aplicativos e servi\u00e7os seja feita com agilidade.\n\nDiante de uma transforma\u00e7\u00e3o digital vivida por muitas empresas e pa\u00edses, o Desenvolvimento de Software tem virado pauta na vida de muitos gestores. Por esse motivo, \u00e9 importante entender mais sobre este assunto, que \u00e9 muito falado e tem grande impacto no mundo atualmente.\n\nUma pesquisa feita pela PM Solutions apontou que 37% dos projetos de TI ficam em estado de risco de fracasso, a cada ano. Al\u00e9m disso, em outra pesquisa apresentada pela empresa de consultoria, McKinsey, 17% dos projetos de TI est\u00e3o indo mal a ponto de colocarem em risco a exist\u00eancia das pr\u00f3prias empresas.\n\nE a raz\u00e3o disso vem, muitas vezes, da falta de informa\u00e7\u00e3o, tanto dos gestores como tamb\u00e9m, em alguns casos, dos pr\u00f3prios desenvolvedores, que n\u00e3o entendem alguns fatores importantes na constru\u00e7\u00e3o de um software com qualidade.\n\nDiante disso, abaixo est\u00e3o os principais pontos para entender o que realmente \u00e9 Desenvolvimento de Software, no contexto de gest\u00e3o, quais suas aplica\u00e7\u00f5es, desafios e como entender um pouco mais dos tipos de linguagem que existem.\n\nO que \u00e9 Desenvolvimento de Softwares?\n\nAntes de iniciar a explica\u00e7\u00e3o relacionada ao Desenvolvimento de Softwares em si, primeiro, \u00e9 importante definir o que s\u00e3o softwares. O software \u00e9 um produto virtual, que consiste em um agrupamento de c\u00f3digos escritos em linguagens de programa\u00e7\u00e3o. Alguns exemplos de software s\u00e3o o Microsoft Word e o pr\u00f3prio buscador do Google.\n\nContudo, quando o usu\u00e1rio utiliza o software, ele n\u00e3o v\u00ea os c\u00f3digos, apenas os resultados que eles geram. Esses resultados s\u00e3o lidos pelas m\u00e1quinas e materializados nas telas dos equipamentos ou resultando a\u00e7\u00f5es em alguns aparelhos.\n\nEnt\u00e3o, o Desenvolvimento de Softwares \u00e9 a atividade de criar, testar e manter softwares. Diante disso, \u00e9 importante entender a complexidade dessa atividade, principalmente se for considerado que, para desenvolver uma solu\u00e7\u00e3o, \u00e9 necess\u00e1rio n\u00e3o apenas conhecimento t\u00e9cnico de programa\u00e7\u00e3o, mas tamb\u00e9m saber conduzir uma solu\u00e7\u00e3o do ponto de vista de neg\u00f3cios, usabilidade, experi\u00eancia, fun\u00e7\u00f5es, entre outras quest\u00f5es.\n\nEssa condu\u00e7\u00e3o deve ser feita atrav\u00e9s de um planejamento e alinhamento bem definidos e, dessa forma, a solu\u00e7\u00e3o consiga atender as necessidades apresentadas pelos clientes.\n\nTipos de Linguagens de Programa\u00e7\u00e3o\n\nComo dito acima, os softwares s\u00e3o desenvolvidos utilizando linguagens de programa\u00e7\u00e3o. Portanto, existem diferentes tipos de linguagens e cada uma ser\u00e1 mais adequada em determinados casos. Segundo especialistas da \u00e1rea, as linguagens podem ser classificadas de tr\u00eas formas diferentes:\n\nLinguagem de M\u00e1quina\n\nAs linguagens de programa\u00e7\u00e3o classificadas como Linguagem de M\u00e1quina s\u00e3o aquelas feitas para a compreens\u00e3o dos computadores. Dentro da programa\u00e7\u00e3o, este tipo de linguagem \u00e9 considerado como de baixo n\u00edvel, pois elas n\u00e3o s\u00e3o de f\u00e1cil entendimento para as pessoas. Por esse motivo, as pessoas usam linguagens de alto n\u00edvel.\n\nOs programas escritos em linguagens de alto n\u00edvel tamb\u00e9m s\u00e3o compilados e/ou interpretados na linguagem de m\u00e1quina para que os computadores possam execut\u00e1-las.\n\nLinguagem de Montagem\n\nAs Linguagens de Montagem s\u00e3o consideradas como uma representa\u00e7\u00e3o da linguagem de m\u00e1quina, isso significa que cada instru\u00e7\u00e3o da linguagem de montagem se traduz em uma instru\u00e7\u00e3o da linguagem de m\u00e1quina.\n\nContudo, por mais que esse tipo de linguagem seja leg\u00edvel, ela ainda \u00e9 considerada de baixo n\u00edvel. Uma desvantagem da Linguagem de Montagem \u00e9 que ela n\u00e3o \u00e9 port\u00e1til em virtude de que cada plataforma tem sua Linguagem de Montagem espec\u00edfica.\n\nLinguagem de Alto N\u00edvel\n\nEsse \u00e9 o tipo de linguagem mais popular entre os programadores. Linguagens como C, C++ e JavaScript s\u00e3o todas de alto n\u00edvel. As vantagens desse tipo de linguagem \u00e9 que elas s\u00e3o leg\u00edveis e port\u00e1teis.\n\nContudo, elas s\u00e3o menos poderosas em compara\u00e7\u00e3o com as linguagens de montagem, porque uma \u00fanica declara\u00e7\u00e3o em um idioma de alto n\u00edvel \u00e9 traduzida em v\u00e1rias declara\u00e7\u00f5es de linguagem de m\u00e1quina. As linguagens de Alto N\u00edvel podem ainda ser classificadas como:\n\n* Linguagens Funcionais: Programa\u00e7\u00e3o funcional \u00e9 um paradigma de programa\u00e7\u00e3o baseado em fun\u00e7\u00f5es matem\u00e1ticas que prezam por imutabilidade de dados e de estados. Alguns exemplos desse tipo de linguagem, s\u00e3o: Scala, F#, Clojure e Lisp.\n* Linguagens Procedurais: Nas Linguagens Procedurais, um programa \u00e9 escrito em uma sequ\u00eancia de etapas que devem ser seguidas para produzir um resultado. Alguns exemplos desse tipo de linguagem, s\u00e3o: Cobol, Fortran e C.\n* Linguagens Orientada a Objetos: Nas linguagens OOP, um programa \u00e9 dividido em objetos que cont\u00eam dados, bem como m\u00e9todos que operam nos dados. Alguns exemplos desse tipo de linguagem s\u00e3o: Java, C# e C++.\n* Linguagens de Programa\u00e7\u00e3o L\u00f3gica: Essas linguagens s\u00e3o usadas para criar programas que permitem ao computador raciocinar logicamente. Tem como exemplo a Prolog.\n\nO que \u00e9 Open Source?\n\nO termo Open Source ou C\u00f3digo Aberto surgiu pela primeira vez em uma reuni\u00e3o em 1998 na Calif\u00f3rnia, quando um grupo de pessoas do movimento do \u201csoftware livre\u201d fez a sugest\u00e3o. Originalmente essa sugest\u00e3o foi feita por Christine Peterson.\n\nA Open Source Iniciative (OSI) foi formada no mesmo ano da reuni\u00e3o, como uma organiza\u00e7\u00e3o educacional, de advocacia e de administra\u00e7\u00e3o, momento esse que se tornou o mais importante na hist\u00f3ria do desenvolvimento colaborativo.\n\nMichael Tiemann e Eric Raymond (que mais tarde se tornaram presidentes da OSI) e Todd Anderson, s\u00e3o alguns outros exemplos de pessoas refer\u00eancias na \u00e1rea que estiveram nesta reuni\u00e3o.\n\nO objetivo da cria\u00e7\u00e3o desse termo foi para que o mercado de ind\u00fastria de software tivesse uma alternativa, com um modelo colaborativo, onde o c\u00f3digo fonte possa ser livremente acessado, usado, modificado e compartilhado por qualquer pessoa. Al\u00e9m disso, existem algumas linguagens que s\u00e3o consideradas Open Source, algumas delas s\u00e3o: Java, PHP, Python e Perl.\n\nPara que as linguagens sejam consideradas Open Source, \u00e9 necess\u00e1rio que elas tenham algumas caracter\u00edsticas, que s\u00e3o:\n\n* Livre distribui\u00e7\u00e3o\n* C\u00f3digo fonte\n* Trabalhos Derivados\n* Integridade do autor do c\u00f3digo\n* N\u00e3o discrimina\u00e7\u00e3o contra pessoas ou grupos\n* N\u00e3o discrimina\u00e7\u00e3o contra \u00e1reas de atua\u00e7\u00e3o\n* Distribui\u00e7\u00e3o da Licen\u00e7a\n* Licen\u00e7a n\u00e3o espec\u00edfica a um produto\n* Licen\u00e7a n\u00e3o restrinja outros programas\n* Licen\u00e7a neutra em rela\u00e7\u00e3o \u00e0 tecnologia\n*\n\nO que \u00e9 e quais as diferen\u00e7as entre Front-end e Back-end?\n\nOs termos Front-end e Back-end est\u00e3o relacionados com a separa\u00e7\u00e3o de preocupa\u00e7\u00f5es entre a camada de apresenta\u00e7\u00e3o (Front-end) e a camada de acesso a dados (Back-end) de um software.\n\nPara ficar mais claro, o Front-end est\u00e1 relacionado com o lado do usu\u00e1rio, ou seja, se trata de tudo que o usu\u00e1rio pode ver e interagir com a \u201cfrente\u201d do software. Ent\u00e3o, todos os elementos que s\u00e3o criados na interface do usu\u00e1rio com a qual ele pode interagir, \u00e9 feito no Front-end.\n\nAlgumas linguagens utilizadas em aplica\u00e7\u00f5es Front-end s\u00e3o: HTML, CSS e JavaScript, al\u00e9m de bibliotecas e frameworks, como Angular, React, Vue.js, etc. Portanto, o Front-end est\u00e1 relacionado com o lado do cliente (client-side) em um software.\n\nJ\u00e1 o Back-end est\u00e1 relacionada com a camada de acesso a dados, onde eles s\u00e3o tratados e onde s\u00e3o feitas as requisi\u00e7\u00f5es para o banco de dados para que ele possa inserir, ler e arquivar esses dados, sendo a camada que o usu\u00e1rio n\u00e3o pode ver durante o uso do software.\n\n\u00c9 comum que os usu\u00e1rios fa\u00e7am intera\u00e7\u00f5es em listas que s\u00e3o feitas no Front-end, por exemplo, isso faz com que esse pedido de informa\u00e7\u00e3o seja feita ao Back-end, que ir\u00e1 processar e tratar esses dados e dar retorno ao Front-end.\n\nOs desenvolvedores Back-end t\u00eam foco em quest\u00f5es relacionada \u00e0 seguran\u00e7a, estrutura e gerenciamento de conte\u00fado. Portanto, apesar do usu\u00e1rio n\u00e3o fazer nenhuma intera\u00e7\u00e3o direta com o Back-end, ele pode ser constantemente beneficiado pelos benef\u00edcios que ele oferece, principalmente em solu\u00e7\u00f5es mais complexas.\n\nComo \u00e9 o Design no Desenvolvimento de Software\n\nDiferentemente do foco apenas no visual que tem o Design Gr\u00e1fico, o Design Web est\u00e1 relacionado a toda parte de design dos softwares, tamb\u00e9m pensando na experi\u00eancia do usu\u00e1rio. Contudo, n\u00e3o parece t\u00e3o simples, j\u00e1 que se trata de uma \u00e1rea multidisciplinar, pois envolve acessibilidade, usabilidade, arquitetura da informa\u00e7\u00e3o, programa\u00e7\u00e3o e, claro, a satisfa\u00e7\u00e3o do usu\u00e1rio.\n\nDiante disso, existem algumas formas prim\u00e1rias diferentes de Design, s\u00e3o elas: UX, UI, IxD, IA. Abaixo trouxe um pouco mais sobre cada um delas para ficar claro como \u00e9 o funcionamento no Desenvolvimento de Software.\n\nUX \u2013 User Experience\n\nEsse \u00e9 um processo focado na experi\u00eancia do usu\u00e1rio, ou seja, aqui os times criam produtos que sejam de boa utiliza\u00e7\u00e3o e relevantes para os usu\u00e1rios. Dessa forma, o profissional que trabalha nessa \u00e1rea fica respons\u00e1vel pela l\u00f3gica da experi\u00eancia do produto, utilizando wireframes e prot\u00f3tipos.\n\nSketch, Axure e Mockplus s\u00e3o alguns exemplos de ferramentas que s\u00e3o utilizadas no UX Design. Portanto, \u00e9 importante que nessa forma de design o comportamento humano e o servi\u00e7o oferecido sejam estudados para buscar melhorias na satisfa\u00e7\u00e3o e na lealdade dos consumidores.\n\nUI \u2013 User Interface\n\n\u00c9 o processo de fazer interfaces nos softwares ou dispositivos digitais com foco no estilo ou apar\u00eancia, ou seja, o profissional dessa \u00e1rea deve buscar selecionar os elementos corretos da interface, como por exemplo textos, bot\u00f5es, campos de textos, entre outros fatores.\n\nAlguns exemplos de ferramentas que s\u00e3o utilizadas no UI Design s\u00e3o: Photoshop, Sketch e Illustrator. Ent\u00e3o, o objetivo aqui \u00e9 fazer que as intera\u00e7\u00f5es com os usu\u00e1rios sejam o mais simples e eficiente poss\u00edvel.\n\nIxD \u2013 Interaction Design\n\nComo uma defini\u00e7\u00e3o mais simples, ela pode ser considerada como a intera\u00e7\u00e3o entre os usu\u00e1rios e os produtos. O objetivo \u00e9 criar produtos que podem fazer com que seus usu\u00e1rios alcancem seus objetivos da forma mais simples e eficiente poss\u00edvel.\n\nEssa forma de design \u00e9 considerada um componente importante dentro do design de experi\u00eancia do usu\u00e1rio (UX). Nesse sentido, os profissionais da \u00e1rea se esfor\u00e7am para construir relacionamentos relevantes entre as pessoas e as solu\u00e7\u00f5es digitais que elas usam.\n\nIA \u2013 Information Architecture\n\nA Arquitetura da Informa\u00e7\u00e3o \u00e9 o design estrutural de ambientes e como o conte\u00fado da solu\u00e7\u00e3o \u00e9 organizado. Al\u00e9m disso, \u00e9 onde se inicia o entendimento de quais informa\u00e7\u00f5es precisam ser comunicadas.\n\nO IA permite que volume de informa\u00e7\u00f5es seja organizado de maneira l\u00f3gica a fim de que uma equipe possa dar andamento na solu\u00e7\u00e3o. Portanto, o objetivo aqui \u00e9 auxiliar as pessoas a encontrarem informa\u00e7\u00f5es e completar tarefas.\n\nQuais s\u00e3o as Metodologias de Desenvolvimento?\n\nA empresa de tecnologia Synopsys classificou as principais metodologias de desenvolvimento de software em quatro categorias: Waterfall, Rapid Application Development, Agile e DevOps. Abaixo est\u00e1 uma vis\u00e3o geral das metodologias, apresentando os pontos fortes e fracos de cada uma.\n\nWaterfall\n\nA metodologia Waterfall ou Cascata, em portugu\u00eas, \u00e9 considerado por muitos a mais tradicional. Essa \u00e9 uma metodologia linear r\u00edgida, onde existem 5 fases sequenciais com focos em objetivos diferentes, s\u00e3o elas:\n\n* Requisitos\n* Projetos\n* Implementa\u00e7\u00e3o\n* Verifica\u00e7\u00e3o\n* Manuten\u00e7\u00e3o\n\nAs etapas apenas s\u00e3o passadas para a pr\u00f3xima fase quando cada uma delas est\u00e3o 100% conclu\u00eddas, o que explica o nome da metodologia, j\u00e1 que a \u00e1gua da cascata n\u00e3o sobe, apenas desce, ou seja, as fases seguem para apenas um sentido. Ent\u00e3o, \u00e9 comum que, geralmente, n\u00e3o haja um processo para voltar a modificar o projeto ou a dire\u00e7\u00e3o.\n\nA vantagem da Waterfall \u00e9 que ele \u00e9 muito meticuloso. Al\u00e9m disso, \u00e9 uma boa op\u00e7\u00e3o para desenvolvimento de grandes projetos que precisam ter uma vis\u00e3o unificadora, al\u00e9m de projetos que t\u00eam objetivos claros e requisitos est\u00e1veis. S\u00e3o ben\u00e9ficos tamb\u00e9m para profissionais menos experientes e equipes que mudam a composi\u00e7\u00e3o frequentemente.\n\nContudo, existem algumas desvantagens, e as principais est\u00e3o relacionadas com as necess\u00e1rias mudan\u00e7as constantes no processo de desenvolvimento, mudan\u00e7as essas que n\u00e3o v\u00eam apenas do cliente, mas tamb\u00e9m do mercado, tecnologia ou interesses da organiza\u00e7\u00e3o. Al\u00e9m disso, essa metodologia \u00e9 considerada lenta em raz\u00e3o da estrutura e controle r\u00edgido.\n\nRapid Application\n\nEssa metodologia chamada Rapid Application Development (RAD), \u00e9 baseada principalmente em prot\u00f3tipos, isso significa que o foco \u00e9 produzir uma vers\u00e3o funcional da solu\u00e7\u00e3o o mais r\u00e1pido poss\u00edvel, e logo ap\u00f3s, repetir continuamente depois disso.\n\nAs equipes da RAD s\u00e3o geralmente pequenas e envolvem apenas desenvolvedores experientes e qualificados em muitas disciplinas, o que faz da RAD um processo que foca na produ\u00e7\u00e3o de sistemas com alta qualidade e baixo custo.\n\nNesse caso, diferentemente da Waterfall, um projeto pode facilmente se desviar do seu plano original, sendo que \u00e0 medida que cada repeti\u00e7\u00e3o \u00e9 conclu\u00edda o produto fica cada vez mais refinado.\n\nUma equipe r\u00e1pida e altamente flex\u00edvel e um relacionamento pr\u00f3ximo com o cliente s\u00e3o algumas vantagens da RAD. Al\u00e9m disso, essa metodologia nunca est\u00e1 muito ligada a um prot\u00f3tipo e est\u00e1 sempre disposta a melhorar para atender as necessidades do cliente. A RAD \u00e9 especialmente \u00fatil para projetos pequenos e m\u00e9dios que s\u00e3o sens\u00edveis ao tempo.\n\nPor\u00e9m, existem alguns desafios, principalmente relacionados com as equipes, tendo em vista que exige desenvolvedores altamente qualificados e com profundo conhecimento sobre a \u00e1rea. H\u00e1 menos ader\u00eancia aos prazos e mais foco na adi\u00e7\u00e3o de recursos, que podem estender as datas de entrega, dessa forma, \u00e9 improv\u00e1vel que organiza\u00e7\u00f5es que n\u00e3o atendem esses requisitos se beneficiem da RAD.\n\nAgile\n\nA metodologia Agile ou \u00c1gil, em portugu\u00eas, \u00e9 parecida com a RAD, mas tem algumas adapta\u00e7\u00f5es para atender projetos maiores. \u00c9 comum que essa metodologia seja usada pelas equipes para minimiza\u00e7\u00e3o de riscos em virtude da adi\u00e7\u00e3o de novos pequenos incrementos na solu\u00e7\u00e3o de forma interativa.\n\nOs recursos s\u00e3o geridos de forma met\u00f3dica na equipe. Contudo, \u00e9 poss\u00edvel que o cliente esteja envolvido no progresso da solu\u00e7\u00e3o, acompanhando o desenvolvimento e sendo capaz de decidir antes que o pr\u00f3ximo recurso seja desenvolvido.\n\nEssa metodologia usa sprints ou um per\u00edodo de tempo em que um determinado recurso deve ser constru\u00eddo, testado e apresentado. Al\u00e9m disso, essa metodologia tem uma declara\u00e7\u00e3o de princ\u00edpios que fundamentam o desenvolvimento \u00e1gil de software, chamada Manifesto \u00c1gil. Na imagem abaixo \u00e9 poss\u00edvel entender um pouco mais sobre esse manifesto.\n\nFonte: Manifesto para o desenvolvimento \u00e1gil de software\nA principal vantagem desse tipo de metodologia \u00e9 que a solu\u00e7\u00e3o pode ser lan\u00e7ada em meio \u00e0s itera\u00e7\u00f5es, ou seja, um MVP que vai melhorando com o tempo, corrigindo defeitos, melhorando processos e alinhando expectativas. Com isso, \u00e9 poss\u00edvel que o lan\u00e7amento do software seja feito mais cedo.\n\nContudo, h\u00e1 tamb\u00e9m desafios que podem dificultar a implanta\u00e7\u00e3o bem feita, alguns deles s\u00e3o a comunica\u00e7\u00e3o em tempo real e a necessidade de muito trabalho em raz\u00e3o de que os desenvolvedores dever\u00e3o finalizar cada recurso em cada itera\u00e7\u00e3o para que seja aprovada pelos clientes.\n\nDevOps\n\nDevOps origina-se da uni\u00e3o das palavras \u201cdesenvolvimento\u201d (development) e \u201copera\u00e7\u00f5es\u201d (operations), com o objetivo de unir o desenvolvimento de software (Dev) \u00e0 opera\u00e7\u00e3o de software (Ops).\n\nEssa metodologia \u00e9 um conjunto de filosofias e pr\u00e1ticas que otimiza a distribui\u00e7\u00e3o de aplicativos e servi\u00e7os. Portanto, o DevOps est\u00e1 relacionado com pr\u00e1ticas para integra\u00e7\u00e3o das equipes de desenvolvimento, e o objetivo aqui \u00e9 reduzir o ciclo de desenvolvimento dos sistemas para entregar com mais velocidade sem perder a qualidade.\n\nExistem diversos benef\u00edcios na utiliza\u00e7\u00e3o dessa metodologia, alguns deles s\u00e3o:\n\n* Reduzir taxa de falha de novos lan\u00e7amentos\n* Diminuir o tempo de espera entre as corre\u00e7\u00f5es\n* Minimizar as interrup\u00e7\u00f5es e maximizar a confiabilidade\n\nContudo, Rob C. Guckenberger, diretor executivo para o desenvolvimento de aplicativos do Commonwealth Office of Technology, de Kentucky, diz que o modelo DevOps pode permitir comportamentos desonestos em raz\u00e3o da autoridade e autonomia que s\u00e3o afastadas dos gestores de desenvolvimento e opera\u00e7\u00f5es.\n\nUm exemplo pode vir de pessoas que podem corrigir falhas imediatas e ignorar problemas que n\u00e3o se manifestam claramente, ignorando os impactos do que poderia ser uma falha ainda maior da que foi corrigida. \u201cCom autoridade vem alguma habilidade para fazer coisas que voc\u00ea n\u00e3o deve fazer\u201d, afirma Guckenberger.\n\nConclus\u00e3o\n\nA tecnologia est\u00e1 cada vez mais presente no dia a dia dos executivos e gestores. Se aprofundar neste tipo de conhecimento \u00e9 importante n\u00e3o s\u00f3 para quem tem interesse em aprender sobre a \u00e1rea, mas tamb\u00e9m como aux\u00edlio para a gest\u00e3o e troca de ideias com a equipe t\u00e9cnica.\n\nPor esse motivo, ao longo do artigo foi apresentado os principais conceitos de desenvolvimento de software, que podem e devem ser aplicados ao universo de gest\u00e3o. A aplica\u00e7\u00e3o dos conceitos nas solu\u00e7\u00f5es digitais v\u00e3o depender do cen\u00e1rio e troca de ideias com a equipe de desenvolvimento.\n\nPor fim, o entendimento desses pontos ser\u00e3o de extrema import\u00e2ncia para gestores envolvidos na constru\u00e7\u00e3o de um software, principalmente diante dos problemas que v\u00e3o ocorrer no tempo de desenvolvimento, especialmente na decis\u00e3o de neg\u00f3cios, que \u00e9 extremamente complexa e desafiante.\n\nLinks para Leitura\n\n* Como Definir o Escopo Ideal para a sua Solu\u00e7\u00e3o Digital\n* Qual Dor de Mercado seu Produto de Software Resolve?\n* Solu\u00e7\u00f5es Digitais: Como Usar o Tempo de Desenvolvimento a seu Favor\n\nRead more articles\n\nPrevious PostTechnical Debt: O que \u00e9 e quais s\u00e3o as suas consequ\u00eancias?\n\nPr\u00f3ximoSuporte de DevOps: O que \u00e9 e quais s\u00e3o seus benef\u00edcios?\n\nVinicius Lima\n\nEspecialista em Intelig\u00eancia de Mercado na GoBacklog, uma empresa especializada no desenvolvimento de solu\u00e7\u00f5es digitais que vem mudando a forma de se criar neg\u00f3cios digitais de sucesso. Estudante de Administra\u00e7\u00e3o, apaixonado por varejo, pessoas, inova\u00e7\u00f5es tecnol\u00f3gicas e resolver problemas complexos.\n\nTalvez voc\u00ea goste tamb\u00e9m\n\nWaterfall e Agile: Vantagens e Desvantagens dessas Metodologias\n\n6 de maio de 2020\nA Transforma\u00e7\u00e3o Digital no Varejo F\u00edsico | Conversando com o CMO\n\n31 de janeiro de 2019\nTurnover no Desenvolvimento de Software: Preservando seu Produto\n\n4 de julho de 2019\nDev Experience: Entenda essa Tend\u00eancia no Desenvolvimento\n\n10 de julho de 2020\n\nEntre para nossa lista e receba conte\u00fados exclusivos\n\nCategorias\n\n* Cases de Sucesso\n* Empreendedorismo Digital\n* Inova\u00e7\u00e3o\n* Marketing Digital\n* Marketing e Vendas\n* Neg\u00f3cios Digitais\n* Produtividade\n* Produto\n* Tecnologia\n\nCategorias do Blog\n\n* Empreendedorismo Digital\n* Neg\u00f3cios Digitais\n* Produtividade\n* Startups\n* Tecnologia\n\nVentures\n\n* JS: The Right Way\n\nAcompanhe a gente\n\n* Opens in a new tab\n* Opens in a new tab\n* Opens in a new tab\n* Opens in a new tab\n* Opens in a new tab\n\nDesenvolvido com pela GoBacklog\n\nFechar",
    "type": "article",
    "url": "https://gobacklog.com/blog/desenvolvimento-de-software-para-gestores/"
}