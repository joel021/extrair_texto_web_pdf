{
    "title": "Introdu&ccedil;&atilde;o a Design Patterns ",
    "author": "Fernando",
    "body": "Introdu\u00e7\u00e3o a Design Patterns\n\nDevMedia - Plataforma para Programadores\n\nTecnologias\n\nFundamentos\n* Algoritmo\n* Orienta\u00e7\u00e3o a Objetos\n\nLinguagens\n* C#\n* Delphi\n* Dart\n* Java\n* JavaScript\n* Kotlin\n* PHP\n* Python\n* TypeScript\n\nBack-end\n* Django\n* Laravel\n* Node.js\n* Spring\n* .Net\n\nFront-end\n* Angular\n* CSS\n* HTML\n* React\n\nBanco de dados\n* Modelagem de dados\n* MySQL\n* Oracle\n* PostgreSQL\n* SQL\n* SQL Server\n\nArquitetura e Design\n* MVC\n* Rest\n* Padr\u00f5es de projeto\n\nMobile\n* Flutter\n* React Native\n\nCI/CD\n* Docker\n* Git\n* Teste de software\n\nEngenharia de Software\n* Levantamento de requisitos\n* Scrum\n* UML\n\nMapaNovos Conte\u00fadosNovos Exerc\u00edcios\n\nExercite Contrate um programador\n\nNavegueCursosArtigosV\u00eddeosGuiasProjetosRevistasF\u00f3rumRanking\n\nteste gr\u00e1tis\n\nEmpresarial\n\nVoc\u00ea est\u00e1 aprendendoGuia de Padr\u00f5es de Projeto\u00bbIntrodu\u00e7\u00e3o\u00bbIntrodu\u00e7\u00e3o: Design Pattern\n\nContinuar estudando\n\nMapa\n\nDashboard\n\nArtigo\n\nInvista em voc\u00ea! Saiba como a DevMedia pode ajudar sua carreira.\n\nIntrodu\u00e7\u00e3o: Design Pattern\n\nVeja nesta artigo uma introdu\u00e7\u00e3o sobre Design Pattern.\n\n* 20 Gostei\n* Favoritar\n* Coment\u00e1rios\n*\n\n* 20 Gostei\n* Favoritar\n*\n\nMarcar como conclu\u00eddo Anotar\nArtigos.NETIntrodu\u00e7\u00e3o: Design Pattern\n\nPor que eu devo ler este artigo: Design Pattern \u00e9 uma forma padr\u00e3o de organizar as classes e objetos, onde s\u00e3o compartilhados conhecimentos sobre orienta\u00e7\u00e3o objeto aplicados a problemas que acontecem em diversos cen\u00e1rios de desenvolvimento de software.\n\nCom o Design Pattern voc\u00ea ter\u00e1 v\u00e1rios benef\u00edcios dentre eles s\u00e3o: c\u00f3digo mais enxuto, limpo, organizado, aumentar a qualidade e diminuir a complexidade do seu c\u00f3digo.\n\nOnde encontrar o Design Pattern?\n\nAlguns programadores mais experientes come\u00e7aram a perceber que os mesmos problemas come\u00e7aram a aparecer varias e varias vezes e a solu\u00e7\u00e3o para aqueles problemas eram sempre as mesmas e come\u00e7aram a catalogar esses padr\u00f5es. Em 1995 um grupo de pessoas, mas especificamente quatro pessoas escreveram um livro iniciando os Design Patterns mais conhecido de mercado, s\u00e3o eles Erich Gamma, Richard Helm, Ralph Johnson e John Vlissides. Eles foram conhecidos como Gang of four ou GOF.\n\nSaiba mais:\n\nCurso de Design Patterns\n\nMas s\u00f3 existe os Design Patterns do GOF?\n\nO Conceito de padr\u00e3o de projeto foi criado na d\u00e9cada de 70 pelo arquiteto Christopher Alexander em seus livros Notes on the Synthesis of Form, The Timeless Way of Building e A Pattern Language, ele estabelece que um padr\u00e3o deve ter.\n\nAl\u00e9m do Design Pattern do GOF, existem v\u00e1rios outros patterns como, por exemplo, Connected Buildings, Car Connection, Positive Outdoor Space e v\u00e1rios outros, esses patters somam certa de 125 padr\u00f5es.\n\nA partir daqui quando falarmos de Design Patter estaremos nos referindo ao GOF. O Design Patterns do GOF possui um formato, s\u00e3o eles:\n\n* Nome: Uma identifica\u00e7\u00e3o para o patterns;\n* Objetivo / Inten\u00e7\u00e3o: Tamb\u00e9m conhecido como (Also Known As);\n* Motiva\u00e7\u00e3o: Um cen\u00e1rio mostrando o problema e a necessidade;\n* Aplicabilidade: Como identificar as situa\u00e7\u00f5es nas quais os padr\u00f5es \u00e9 aplic\u00e1vel;\n* Estrutura: Uma representa\u00e7\u00e3o gr\u00e1fica da estrutura das classes usando um diagrama de classes (UML);\n* Consequ\u00eancias: Vantagens e desvantagem;\n* Implementa\u00e7\u00f5es: Quais detalhes devemos nos preocupar quando implementamos o padr\u00e3o. Detalhes de cada linguagem;\n* Usos conhecidos;\n* Padr\u00f5es Relacionados.\n\nFigura 1. Exemplo de c\u00f3digo (No GOF os c\u00f3digos s\u00e3o em C++)\nOs Designs Patterns do GOF s\u00e3o classificados em tr\u00eas categorias: Cria\u00e7\u00e3o, Estrutural e Comportamental. Na figura abaixo podemos ver os patterns com sua classifica\u00e7\u00e3o.\n\nBom galera esse artigo aborda a introdu\u00e7\u00e3o de Design Patterns e nos pr\u00f3ximos artigos falaremos um pouco sobre alguns padr\u00f5es.\n\nSaiu na DevMedia!\n\n* React Native: do Hello World ao CRUD:\nReact \u00e9 um framework JavaScript criado pelo Facebook para facilitar a constru\u00e7\u00e3o de interfaces de usu\u00e1rio. React Native, da mesma empresa, nos permite criar aplica\u00e7\u00f5es mobile nativas utilizando JavaScript, na l\u00f3gica, e React, para estruturar as views.\n\nSaiba mais sobre Design Pattern ;)\n\n* Padr\u00f5es Command e outros Patterns na pr\u00e1tica:\nOs padr\u00f5es de projetos s\u00e3o t\u00e3o discutidos e exigidos por empresas e institui\u00e7\u00f5es de software, no seu dia a dia como programador . Por isso, nesse artigo veremos como aplic\u00e1-los em situa\u00e7\u00f5es pr\u00e1ticas que se aproximam da realidade de in\u00fameros softwares do mercado, bem como evoluir o sistema com base em qual padr\u00e3o \u00e9 melhor para cada cen\u00e1rio.\n* Introdu\u00e7\u00e3o a Design Pattern::\nCom o Design Pattern voc\u00ea ter\u00e1 v\u00e1rios benef\u00edcios dentre eles s\u00e3o, c\u00f3digo mais enxuto, limpo, organizado, aumentar a qualidade e diminuir a complexidade do seu c\u00f3digo.\n* Design Patterns na teoria e na pr\u00e1tica:\nProgramadores mais novos atualmente se preocupam em tornarem-se especialistas em determinado framework, ignorando a complexidade envolvida por tr\u00e1s e consequentemente deixam de programar orientado a objetos em total plenitude, limitando-se apenas a criar trechos de c\u00f3digo que se conectam e s\u00e3o executados por esses mesmos frameworks.\n\nTecnologias:\n* Estrutura da Linguagem\n\nMarcar como conclu\u00eddo Anotar\n\nFA\u00c7A PARTE DESSE TIME\n\nFa\u00e7a parte dessa comunidade 100% focada em programa\u00e7\u00e3o e tenha acesso ilimitado. Nosso compromisso \u00e9 tornar a sua experi\u00eancia de estudo cada vez mais din\u00e1mica e eficiente. Portanto, se voc\u00ea quer programar de verdade seu lugar \u00e9 aqui. Junte-se a mais de...\n\n+ 800 Mil\n\nprogramadores\n\nJ\u00e1 conhece nosso Plano Empresarial?\n\nConhe\u00e7a agora!\n\nTeste Gr\u00e1tis\n\n* Guias de Tecnologia\n* Cursos\n* Exerc\u00edcios\n* Projetos completos\n* DevCasts\n* Artigos\n* Suporte em tempo real\n\nSaiba mais\n\nPor Fernando Em 2010\n\nReceba nossas novidades\n\nSuporte ao aluno - Deixe a sua d\u00favida.\n\nMenu\n\nTecnologias\n\nExercicios\n\nCursos\n\nArtigos\n\nRevistas\n\nFale conosco\n\nTrabalhe conosco\n\nAssinatura para empresas\n\nTecnologias\n\nFundamentos\n\n.NET\n\nPHP\n\nPython\n\nJava\n\nDelphi\n\nHTML e CSS\n\nJavaScript\n\nNode\n\nReact Native\n\nFlutter\n\nBanco de Dados\n\nMobile\n\nSpring\n\nArquitetura\n\nAutoma\u00e7\u00e3o\n\nEngenharia\n\n+ Assuntos\n\nHospedagem web por Porta 80 Web Hosting\n\nUtilizamos cookies para fornecer uma melhor experi\u00eancia para nossos usu\u00e1rios. Para saber mais sobre o uso de cookies,\nconsulte nossa pol\u00edtica de privacidade. Ao continuar navegando em nosso site, voc\u00ea concorda com a nossa pol\u00edtica.\n\nAceitar",
    "type": "article",
    "url": "https://www.devmedia.com.br/introducao-design-pattern/18838"
}